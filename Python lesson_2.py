"""
1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого
элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать
явно, в программе.
"""
import sys

sample_list = [1, 'text', 46.7, None, True, {5}]
for el in sample_list:
    print(f'элемент: {el}, тип: {type(el)}')

"""
2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 
и т. д. При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка элементов нужно 
использовать функцию input().
"""
new_list = input('Введите элементы списка: ')
new_list = (new_list.split())
print(new_list)
list_length = len(new_list)
for i in range(list_length):
    if list_length % 2 != 0 and i == list_length - 1:
        continue
    elif i % 2 == 0:
        old_value = new_list[i]
        new_list[i] = new_list[i + 1]
        new_list[i + 1] = old_value
print(new_list)

"""
3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц (зима, 
весна, лето, осень). Напишите решения через list и dict.
"""
month_number = int(input(f'Введите порядкое число месяца: '))
full_list = ['зима', 'зима', 'весна', 'весна', 'весна', 'лето', 'лето', 'лето', 'осень', 'осень', 'осень', 'зима']
print(f'Пора года: {full_list[month_number - 1]}')

my_dict = {1: 'зима', 2: 'зима', 3: 'весна', 4: 'весна', 5: 'весна', 6: 'лето', 7: 'лето', 8: 'лето', 9: 'осень',
           10: 'осень', 11: 'осень', 12: 'зима', }
print(f'Пора года: {my_dict[month_number]}')

"""
4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. Строки 
нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.
"""
text_list = input('Введите строку из нескольких слов: ')
text_list = (text_list.split())
for ind, el in enumerate(text_list):
    print(ind + 1, el[0:10])

"""
5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. У пользователя 
нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент 
с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
"""

my_list = [7, 5, 3, 3, 2]
value = int(input('Введите элемент рейтинга: '))

for i in range(len(my_list)):
    if value > my_list[i]:
        my_list.insert(i, value)
        break
    elif value == my_list[i]:
        continue
    else:
        if len(my_list) - 1 == i:
            my_list.append(value)
print(my_list)
